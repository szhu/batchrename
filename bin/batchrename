#!/usr/bin/env python

def read_file_as_lines(filename):
	try:
		with open(filename) as f:
			lines = f.read().splitlines()
	except IOError as exc:
		raise RenamerError(exc)
	i = 0
	while i < len(lines):
		if lines[i]: i += 1
		else: lines.pop(i)
	return lines

def rename(srcf='_', dstf='__'):
	from os import rename

	srcv = read_file_as_lines(srcf)
	dstv = read_file_as_lines(dstf)
	srcc = len(srcv) ; dstc = len(dstv)
	if srcc != dstc:
		raise RenamerError('mismatch: found %d sources and %d destinations' % (srcc, dstc))

	for i in xrange(srcc):
		src = srcv[i]
		dst = dstv[i]
		if src == dst:
			print 'skipping %s' % src
		else:
			try:
				rename(src, dst)
				print '%s -> %s' % (src, dst)
			except OSError as msg:
				print 'cannot move %s -> %s: %s' % (src, dst, msg)

class RenamerError(Exception): pass

def main():
	from sys import argv
	srcf='_' ; dstf='__'
	try:
		srcf = argv[1]
		dstf = argv[2]
	except IndexError: pass
	try: rename(srcf, dstf)
	except RenamerError as exc: print exc

if __name__ == '__main__': main()